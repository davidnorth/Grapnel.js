/****
 * Grapnel.js
 * https://github.com/EngineeringMode/Grapnel.js
 *
 * @author Greg Sabia Tucker <greg@artificer.io>
 * @link http://artificer.io
 * @version 0.5.6
 *
 * Released under MIT License. See LICENSE.txt or http://opensource.org/licenses/MIT
*/

(function(a){function b(b){"use strict";var c=this;return this.events={},this.state=null,this.options=b||{},this.options.usePushState=!!(c.options.pushState&&a.history&&a.history.pushState),this.version="0.5.6","function"==typeof a.addEventListener&&(a.addEventListener("hashchange",function(){c.trigger("hashchange")}),a.addEventListener("popstate",function(){return c.state&&null===c.state.previousState?!1:void c.trigger("navigate")})),this.fragment={get:function(){var b;return b=c.options.usePushState?a.location.pathname.replace(c.options.root,""):!c.options.usePushState&&a.location?a.location.hash?a.location.hash.split(c.options.hashBang?"#!":"#")[1]:"":a._pathname||""},set:function(b){return c.options.usePushState?(b=c.options.root?c.options.root+b:b,a.history.pushState({},null,b)):a.location?a.location.hash=(c.options.hashBang?"!":"")+b:a._pathname=b||"",c},clear:function(){return c.options.usePushState?a.history.pushState({},null,c.options.root||"/"):a.location&&(a.location.hash=c.options.hashBang?"!":""),c}},this}"undefined"!=typeof window&&(a=window),b.regexRoute=function(a,b,c,d){return a instanceof RegExp?a:(a instanceof Array&&(a="("+a.join("|")+")"),a=a.concat(d?"":"/?").replace(/\/\(/g,"(?:/").replace(/\+/g,"__plus__").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g,function(a,c,d,e,f,g){return b.push({name:e,optional:!!g}),c=c||"",""+(g?"":c)+"(?:"+(g?c:"")+(d||"")+(f||d&&"([^/.]+?)"||"([^/]+?)")+")"+(g||"")}).replace(/([\/.])/g,"\\$1").replace(/__plus__/g,"(.+)").replace(/\*/g,"(.*)"),new RegExp("^"+a+"$",c?"":"i"))},b._forEach=function(a,b){return"function"==typeof Array.prototype.forEach?Array.prototype.forEach.call(a,b):function(a,b){for(var c=0,d=this.length;d>c;++c)a.call(b,this[c],c,this)}.call(a,b)},b.prototype.get=b.prototype.add=function(c){var d=this,e=[],f=Array.prototype.slice.call(arguments,1,-1),g=Array.prototype.slice.call(arguments,-1)[0],h=b.regexRoute(c,e),i=function(){var a=d.fragment.get().match(h);if(a){var i={params:{},keys:e,matches:a.slice(1)};b._forEach(i.matches,function(a,b){var c=e[b]&&e[b].name?e[b].name:b;i.params[c]=a?decodeURIComponent(a):void 0});var j={route:c,value:d.fragment.get(),params:i.params,regex:a,stack:[],runCallback:!0,callbackRan:!1,propagateEvent:!0,next:function(){return this.stack.shift().call(d,i,j,function(){j.next.call(j)})},preventDefault:function(){this.runCallback=!1},stopPropagation:function(){this.propagateEvent=!1},parent:function(){var a=!(!this.previousState||!this.previousState.value||this.previousState.value!=this.value);return a?this.previousState:!1},callback:function(){j.callbackRan=!0,j.timeStamp=Date.now(),j.next()}};if(j.stack=f.concat(g),d.trigger("match",j,i),!j.runCallback)return d;if(j.previousState=d.state,d.state=j,j.parent()&&j.parent().propagateEvent===!1)return j.propagateEvent=!1,d;j.callback()}return d},j=!d.options.usePushState&&Object.keys(a).length>0?"hashchange":"navigate";return i().on(j,i)},b.prototype.trigger=function(a){var c=this,d=Array.prototype.slice.call(arguments,1);return this.events[a]&&b._forEach(this.events[a],function(a){a.apply(c,d)}),this},b.prototype.on=b.prototype.bind=function(a,c){var d=this,e=a.split(" ");return b._forEach(e,function(a){d.events[a]?d.events[a].push(c):d.events[a]=[c]}),this},b.prototype.context=function(a){var b=this;return function(c,d){var e="/"!==a.slice(-1)?a+"/":a,f=e+c;return b.get.call(b,f,d)}},b.prototype.navigate=function(a){return this.fragment.set(a).trigger("navigate")},b.listen=function(){var a,c;return arguments[0]&&arguments[1]?(a=arguments[0],c=arguments[1]):c=arguments[0],function(){for(var a in c)this.get.call(this,a,c[a]);return this}.call(new b(a||{}))},"function"!=typeof a.define||a.define.amd.grapnel?"object"==typeof module&&"object"==typeof module.exports?module.exports=exports=b:a.Grapnel=b:a.define(function(){return a.define.amd.grapnel=!0,b})}).call({},this);